{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GIfGripItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GIfGripItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,uBAAMC,SAVW,SAACC,GACfH,EAAWI,OAAOC,OAAO,IACxBF,EAAEG,iBACFR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,UACE,6CACA,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SAnBa,SAACP,GAEhBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARvB,kBAYdM,GAZc,4CAAF,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAW,mCAAhB,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAAwBd,mBAAS,CAC7BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAbAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGfH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAKtB,CAACpB,IAEGqB,EDjBsBK,CAAa1B,GAA9Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAMnB,OACI,qCACA,6BAAKpB,IAEDoB,GAAU,wCAEd,qBAAKJ,UAAU,kEAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,aErBnBgB,EAAc,WACvB,MAAoCzC,mBAAS,CAAC,eAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCAGI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADJA,Y,MChB/B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.91c42bfa.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const changeHaddle=(e) =>{\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const haddleSubmit = (e) =>{\r\n        if(inputValue.trim().length>2){\r\n            e.preventDefault();\r\n            setCategories(cats=>[inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n       \r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={haddleSubmit}>\r\n          <h2>AddCategory</h2>  \r\n          <input type='text'\r\n          value={inputValue}\r\n          onChange={changeHaddle}\r\n          \r\n          \r\n          >\r\n          </input>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs= async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2zsOaXiidTT9qel6UIfyLB42de27kUoG`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GIfGripItem = ({title,url}) => {\r\n    return (\r\n        <div className =\"card animate__lightSpeedOutRight\">\r\n           <img src={url} alt={title}></img> \r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs'\r\n import { GIfGripItem } from './GIfGripItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setImages] = useState([])\r\n    const {data:images,loading}= useFetchGifs(category);\r\n    // useEffect(()=>{\r\n    //     getGifs(category).\r\n    //     then(setImages)\r\n    // }, [category])\r\n \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {\r\n            loading&& <p>Loading</p>\r\n        }\r\n        <div className=\"card-grid animate__animated animate__bounce animate__fadeInDown\">\r\n            \r\n\r\n                {\r\n                    images.map( img=>(\r\n                       <GIfGripItem \r\n                       key={img.id}\r\n                       {...img}\r\n                       />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state,setState]= useState({\r\n        data:[],\r\n        loading:true\r\n\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs=>{\r\n            \r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n\r\n            \r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp =()=>{\r\n    const [categories, setCategories] = useState(['Clone Wars'])\r\n    /*const haddleAdd = ()=>{\r\n\r\n        setCategories([...categories,'Invincible'])\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n      \r\n        \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n\r\n                    categories.map(category=>\r\n                        <GifGrid \r\n                        key = {category}\r\n                        category= {category}\r\n                        \r\n                        \r\n                        />\r\n                        \r\n                )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}